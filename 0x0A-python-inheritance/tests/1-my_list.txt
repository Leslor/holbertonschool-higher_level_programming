============================
|  How to Use 1-my_list.py |
============================

This module has one Class called ``MyList(list)`` and this class have one method `` print_sorted(self)`` that we will testing

Import the Class

    >>> MyList = __import__('1-my_list').MyList

Numbers
=======

``print_sorted(self)`` prints the list, but sorted (ascending sort)
::

	>>> my_list = MyList((7, 5, 3, 0))
	>>> my_list
	[7, 5, 3, 0]
	>>> my_list.print_sorted()
	[0, 3, 5, 7]
	>>> my_list = MyList((-2, 3, 1))
	>>> my_list
	[-2, 3, 1]
	>>> my_list.print_sorted()
	[-2, 1, 3]

	>>> my_list = MyList()
	>>> my_list.append(1)
	>>> my_list.append(4)
	>>> my_list.append(2)
	>>> my_list.append(3)
	>>> my_list.append(5)
	>>> print(my_list)
	[1, 4, 2, 3, 5]
	>>> print(my_list[0])
	1
	>>> my_list.print_sorted()
	[1, 2, 3, 4, 5]
	>>> print(my_list[10])
	Traceback (most recent call last):
	IndexError: list index out of range

Non-TypeList
===========

Result if one of the arguments is not a int type

	>>> my_list = MyList(('4', '3', '0', '1'))
	>>> my_list
	['4', '3', '0', '1']
	>>> my_list.print_sorted()
	['0', '1', '3', '4']
	>>> my_list = MyList((True, False))
	>>> my_list
	[True, False]
	>>> my_list.print_sorted()
	[False, True]
	>>> my_list = MyList({'key1': 'value1', 'key2': 'value2'})
	>>> my_list
	['key1', 'key2']
	>>> my_list.print_sorted()
	['key1', 'key2']
	>>> my_list = MyList((float('inf'), 4, float('nan'), 0, None))
	>>> my_list
	[inf, 4, nan, 0, None]
	>>> my_list.print_sorted()
	Traceback (most recent call last):
	TypeError: '<' not supported between instances of 'NoneType' and 'float'
	>>> my_list = MyList('4', '3', 0, '1')
	Traceback (most recent call last):
	TypeError: list expected at most 1 argument, got 4
	>>> my_list = MyList(('4', '3', 0, '1'))
	>>> my_list.print_sorted()
	Traceback (most recent call last):
  	TypeError: '<' not supported between instances of 'int' and 'str'


::

If an undefined variable is passed

	>>> my_list = MyList((float(inf), 4, 0, 100))
	Traceback (most recent call last):
	NameError: name 'inf' is not defined

If we pass an infinity or Nan number


	>>> my_list = MyList((float('inf'), 4, 0, 100))
	>>> my_list
	[inf, 4, 0, 100]
	>>> my_list.print_sorted()
	[0, 4, 100, inf]
	>>> my_list = MyList((float('inf'), 4, float('nan'), 0, 100))
	>>> my_list
	[inf, 4, nan, 0, 100]
	>>> my_list.print_sorted()
	[0, 4, 100, inf, nan]
